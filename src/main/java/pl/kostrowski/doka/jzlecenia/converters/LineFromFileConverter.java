package pl.kostrowski.doka.jzlecenia.converters;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;
import pl.kostrowski.doka.jzlecenia.dto.LineFromFileDto;
import pl.kostrowski.doka.jzlecenia.model.InputFile;
import pl.kostrowski.doka.jzlecenia.model.LineFromFile;

import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.LinkedList;
import java.util.List;

@Service
public class LineFromFileConverter {

    private final Logger LOG = LoggerFactory.getLogger(LineFromFileConverter.class);

    public List<LineFromFile> convert(List<LineFromFileDto> input, InputFile inputFile) {

        List<LineFromFile> result = new LinkedList<>();

        if (input != null) {
            for (LineFromFileDto lineFromFileDto : input) {
                LineFromFile lineFromFile = new LineFromFile();
                lineFromFile.setInputFile(inputFile);

//AutoGenerated

                lineFromFile.setNrZlecenia(lineFromFileDto.getNrZlecenia());

                lineFromFile.setNrArtykulu(lineFromFileDto.getNrArtykulu());

                lineFromFile.setNazwaArtykulu(lineFromFileDto.getNazwaArtykulu());

                Double iloscZamowionaTmp = lineFromFileDto.getIloscZamowiona();
                lineFromFile.setIloscZamowiona(parseDoubleToBigDecimal(iloscZamowionaTmp, 2));

                Double iloscPozostalaDoWydaniaTmp = lineFromFileDto.getIloscPozostalaDoWydania();
                lineFromFile.setIloscPozostalaDoWydania(parseDoubleToBigDecimal(iloscPozostalaDoWydaniaTmp, 2));

                lineFromFile.setDataDostawy(lineFromFileDto.getDataDostawy());

                lineFromFile.setJednostkaSalesUnit(lineFromFileDto.getJednostkaSalesUnit());

                lineFromFile.setNrProjektu(lineFromFileDto.getNrProjektu());

                lineFromFile.setNrBudowy(lineFromFileDto.getNrBudowy());

                lineFromFile.setNrKlienta(lineFromFileDto.getNrKlienta());

                lineFromFile.setNrWierszaWZleceniu(lineFromFileDto.getNrWierszaWZleceniu());

                lineFromFile.setTypBiznesu(lineFromFileDto.getTypBiznesu());

                lineFromFile.setStatusWiersza(lineFromFileDto.getStatusWiersza());

                Double masaJednostkowaTmp = lineFromFileDto.getMasaJednostkowa();
                lineFromFile.setMasaJednostkowa(parseDoubleToBigDecimal(masaJednostkowaTmp, 4));

                Double cenaSprzedazyZaJednostkeTmp = lineFromFileDto.getCenaSprzedazyZaJednostke();
                lineFromFile.setCenaSprzedazyZaJednostke(parseDoubleToBigDecimal(cenaSprzedazyZaJednostkeTmp, 4));

                lineFromFile.setJednostkaSalesPriceUnit(lineFromFileDto.getJednostkaSalesPriceUnit());

                Double tonazTmp = lineFromFileDto.getTonaz();
                lineFromFile.setTonaz(parseDoubleToBigDecimal(tonazTmp, 2));

                Double pozostalyTonazDoWydaniaTmp = lineFromFileDto.getPozostalyTonazDoWydania();
                lineFromFile.setPozostalyTonazDoWydania(parseDoubleToBigDecimal(pozostalyTonazDoWydaniaTmp, 2));

                lineFromFile.setDataModyfikacji(lineFromFileDto.getDataModyfikacji());

                lineFromFile.setDataUtworzenia(lineFromFileDto.getDataUtworzenia());

                lineFromFile.setKtoStworzyl(lineFromFileDto.getKtoStworzyl());
//End of AutoGenerated


                result.add(lineFromFile);
            }
        }
        return result;
    }

    private BigDecimal parseDoubleToBigDecimal (Double input, int scale){

        BigDecimal result;

        if (input == null){
            return null;
        }
        try {
            result = new BigDecimal(input).setScale(scale,RoundingMode.HALF_EVEN);
        } catch (NumberFormatException e){
            LOG.warn("nie udało się przetworzyć " + input + " na BigDecimal");
            result = null;
        }
        return result;
    }
}
